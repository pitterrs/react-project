import React from "react";
import MaterialButton from '@material-ui/core/Button';
import { ButtonProps as MaterialButtonProps } from '@material-ui/core/Button';
import { css } from "@emotion/react";

type FuelVariant = 'primary' | 'secondary' | 'text' | 'text-inline';

export interface ButtonProps extends Omit<MaterialButtonProps,
  'variant' |
  'color' |
  'disableElevation' |
  'disableFocusRipple' |
  'centerRipple' |
  'disableRipple' |
  'disableTouchRipple' |
  'focusRipple' |
  'TouchRippleProps'
> {
  /* Fuel specific variations */
  variant: FuelVariant
}

const baseButtonStyles = css`
  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  min-width: auto;

  &:focus {
    outline: none;
  }

  &.Mui-focusVisible {
    box-shadow: var(--fuel-shadow-focused) !important;
  }

  &.MuiButton-sizeLarge {
    padding: 8px 22px;
    font-size: var(--fuel-font-size-base);
  }

  & .MuiButton-startIcon {
    margin-right: var(--fuel-spacing-1);
  }

  & .MuiButton-endIcon {
    margin-left: var(--fuel-spacing-1);
  }

  &[disabled], &.Mui-disabled {
    cursor: not-allowed;
    pointer-events: auto;
  }
`;

const primaryButton = css`
  background-color: var(--fuel-color-background-action-primary-base);
  color: var(--fuel-color-text-action-primary);
  box-shadow: var(--fuel-shadow-xs), var(--fuel-shadow-inset-button), rgba(0, 0, 0, 0.05) 0px 1px 0px 0px;

  &:hover {
    background-color: var(--fuel-color-background-action-primary-hovered);
    box-shadow: var(--fuel-shadow-xs), var(--fuel-shadow-inset-button), rgba(0, 0, 0, 0.05) 0px 1px 0px 0px;
  }

  &.Mui-focusVisible {
    box-shadow: var(--fuel-shadow-inset-button), var(--fuel-shadow-focused) !important;
  }

  &:active {
    background-color: var(--fuel-color-background-action-primary-pressed);
    box-shadow: var(--fuel-shadow-xs), var(--fuel-shadow-inset-button), rgba(0, 0, 0, 0.05) 0px 1px 0px 0px;
  }

  &[disabled], &.Mui-disabled {
    background-color: var(--fuel-color-background-action-primary-base) !important;
    color: var(--fuel-color-text-action-primary);
    box-shadow: none;
    opacity: .5;
  }
`;

const secondaryButton = css`
  background-color: var(--fuel-color-background-action-secondary-base);
  color: var(--fuel-color-background-action-secondary-text);
  box-shadow: var(--fuel-shadow-xs), rgba(0, 0, 0, 0.05) 0px 1px 0px 0px;
  border: 1px solid var(--fuel-color-border-dark);
  border-top-color:#bfbfbf;

  &:hover {
    background-color: var(--fuel-color-background-action-secondary-hovered);
    border-color: var(--fuel-color-border-dark);
    box-shadow: var(--fuel-shadow-xs), rgba(0, 0, 0, 0.05) 0px 1px 0px 0px;
  }

  &.Mui-focusVisible {
    background-color: var(--fuel-color-background-action-secondary-base);
  }

  &.MuiButton-sizeLarge {
    padding: 7px 22px;
  }

  &:active {
    background-color: var(--fuel-color-background-action-secondary-pressed);
    border-color: var(--fuel-color-border-dark);
    box-shadow: var(--fuel-shadow-xs), rgba(0, 0, 0, 0.05) 0px 1px 0px 0px;
  }

  &[disabled], &.Mui-disabled {
    background-color: var(--fuel-color-background-action-secondary-base);
    color: var(--fuel-color-background-action-secondary-text);
    border-color: var(--fuel-color-border-light);
    box-shadow: none;
    opacity: .5;
  }
`;

const textButton = css`
  background-color: var(--fuel-color-background-action-tertiary-base);
  color: var(--fuel-color-text-action-tertiary);
  box-shadow: none;

  &.MuiButton-sizeLarge {
    padding: 8px 11px;
  }

  &:hover {
    background-color: var(--fuel-color-background-action-tertiary-hovered);
    box-shadow: none;
  }

  &.Mui-focusVisible {
    background-color: var(--fuel-color-background-action-tertiary-base);
  }

  &:active {
    background-color: var(--fuel-color-background-action-tertiary-pressed);
    box-shadow: none;
  }

  &[disabled], &.Mui-disabled {
    background-color: var(--fuel-color-background-action-tertiary-base);
    color: var(--fuel-color-text-action-tertiary);
    opacity: .5;
  }
`;

const textInlineButton = css`
  background-color: var(--fuel-color-background-action-tertiary-base);
  color: var(--fuel-color-text-action-tertiary);
  text-decoration: underline;
  border-radius: 0;
  box-shadow: none;
  font-weight: var(--fuel-font-weight-regular);
  padding: 0;
  min-width: auto;

  &.MuiButton-sizeLarge {
    padding: 0
  }

  &:hover {
    background-color: var(--fuel-color-background-action-tertiary-base);
    color: var(--fuel-color-black);
    text-decoration: underline;
    box-shadow: none;
  }

  &.Mui-focusVisible {
    background-color: var(--fuel-color-background-action-tertiary-base);
    color: var(--fuel-color-text-action-tertiary);
  }

  &:active {
    box-shadow: none;
  }

  &[disabled], &.Mui-disabled {
    color: var(--fuel-color-text-action-tertiary);
    opacity: .5;
  }

  & .MuiButton-startIcon {
    margin-right: 0;
  }

  & .MuiButton-endIcon {
    margin-left: 0;
  }
`;

const getButtonStyles = (variant: FuelVariant) => {
  switch (variant) {
    case 'primary':
      return primaryButton;
    case 'secondary':
      return secondaryButton;
    case 'text':
      return textButton;
    case 'text-inline':
      return textInlineButton;
    default:
      return secondaryButton;
  }
}

const getVariant = (variant: FuelVariant) => {
  switch (variant) {
    case 'primary':
      return 'contained';
    case 'secondary':
      return 'outlined';
    case 'text':
      return 'text';
    case 'text-inline':
      return 'text';
    default:
      return 'outlined';
  }
}

export const Button = React.forwardRef<any, ButtonProps>(
  (
    {
      children,
      variant,
      size,
      ...props
    },
    ref
  ) => {

    const buttonStyles = getButtonStyles(variant);
    const buttonVariant = getVariant(variant);

    return (
      <MaterialButton
        disableRipple={true}
        disableElevation={true}
        css={[baseButtonStyles, buttonStyles]}
        variant={buttonVariant}
        size={size}
        ref={ref}
        {...props}
      >
        {children}
      </MaterialButton>
    );
  });
