import React from "react";
import MaterialListItem from '@material-ui/core/ListItem';
import { ListItemProps as MaterialListItemProps } from '@material-ui/core/ListItem';
import { withStyles } from '@material-ui/core/styles';

// Issue with typescript definitions, which require this override: https://github.com/mui-org/material-ui/issues/14971
export interface ListItemProps extends MaterialListItemProps {
  /* If true, the list item will be a button (using ButtonBase). Props intended for ButtonBase can then be applied to ListItem. */
  button?: any;
}

const StyledListItem = withStyles((theme) => ({
  root: {
    '&:active': {
      backgroundColor: theme.palette.grey["200"]
    },
    '&.MuiListItem-root.Mui-selected:active': {
      backgroundColor: theme.palette.grey["200"]
    }
  }
}))(MaterialListItem);

export const ListItem = React.forwardRef<any, ListItemProps>(
  (
    {
      children,
      ...props
    },
    ref
  ) => {
    return (
      <StyledListItem ref={ref} {...props}>
        {children}
      </StyledListItem>
    );
  });
