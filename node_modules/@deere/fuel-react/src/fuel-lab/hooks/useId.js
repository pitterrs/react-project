// This file was heavily inspired by Reach UI, Carbon Design System, and Chakra UI
// https://github.com/reach/reach-ui/blob/86a046f54d53b6420e392b3fa56dd991d9d4e458/packages/auto-id/src/index.ts
// https://github.com/carbon-design-system/carbon/blob/master/packages/react/src/internal/useId.js
// https://github.com/chakra-ui/chakra-ui/blob/main/packages/hooks/src/use-id.ts
//
//
import { useEffect, useLayoutEffect, useState } from 'react';

let id = 0;
const generateId = () => ++id;

const useIsomorphicLayoutEffect = canUseDOM() ? useLayoutEffect : useEffect;

function canUseDOM() {
    return !!(
        typeof window !== 'undefined' &&
        window.document &&
        window.document.createElement
    );
}

let serverHandoffCompleted = false;

/**
 * Reack hook to generate unique id
 *
 * @param idProp the external id passed from the user
 * @param prefix prefix to append before the id
 */
export function useId(idProp, prefix) {
    const initialId = idProp || (serverHandoffCompleted ? generateId() : null);
    const [uid, setUid] = useState(initialId);

    useIsomorphicLayoutEffect(() => {
        if (uid === null) setUid(generateId());
    }, [])

    useEffect(() => {
        if (serverHandoffCompleted === false) {
            serverHandoffCompleted = true;
        }
    }, [])

    const id = uid != null ? uid.toString() : undefined;

    return (prefix ? `${prefix}-${id}` : id);
}

/**
* Reack hook to generate ids for use in compound components
*
* @param idProp the external id passed from the user
* @param prefixes array of prefixes to use
*
* @example
*
* ```js
* const [buttonId, menuId] = useIds("52", "button", "menu")
*
* // buttonId will be `button-52`
* // menuId will be `menu-52`
* ```
*/
export function useIds(idProp, ...prefixes) {
    const id = useId(idProp)
    return prefixes.map((prefix) => `${prefix}-${id}`)
}
