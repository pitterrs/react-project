const Header = function (H) {

    const Header = function (element) {
        var self = this;

        if (element != document) {
            self.$e = H.logEl(element, 'Header: ');
            self.$pe = H.logEl(element.parentElement, '|- Parent Element (.uxf-header-search)');
            self.$search = H.logEl(self.$pe.querySelectorAll('.uxf-btn-search')[0], '|- .uxf-btn-search ');
            self.$searchInput = H.logEl(self.$pe.querySelectorAll('input[type=search]')[0], '|- input[type=search]');
            self.$mobileSearch = H.logEl(self.$pe.parentElement.querySelectorAll('.uxf-btn-mobile-search')[0], '|- .uxf-btn-mobile-search ');

            if (element === '.uxf-header .uxf-btn-search') {
                $(self.$e).attr('data-search-toggle', 'closed');
                $(self.$e).attr('aria-expanded', 'false');
            }
        } else {
            self.$e = element;
        }
    }

    Header.selector = '.uxf-header .uxf-btn-search';

    Header.prototype = {
        toggleSearch: function (e) {
            if (!(H.Header(this.$searchInput).currentSearchValue()) || $(window).width() < 768) {
                e.preventDefault();

                if ($(this.$pe).hasClass('.uxf-header-search')) {
                    var searchBox = $(this.$pe);
                } else {
                    searchBox = $(this.$pe.parentElement).find('.uxf-header-search');
                }

                var inputBox = $(this.$searchInput);

                if ($(this.$e).attr('data-search-toggle') != 'open') {
                    $(this.$e).attr('data-search-toggle', 'open');
                    $(this.$e).attr('aria-expanded', 'true');
                    $(this.$searchInput).attr('tabindex', '0');
                    $(this.$searchInput).next('.uxf-search-bar-clear-icon').attr('tabindex', '0');
                    searchBox.addClass('uxf-header-search-shown');

                    inputBox.focus();

                    if (inputBox.val().length > 0) {
                        $(this.$pe).find('.uxf-search-bar').addClass('active');
                        searchBox.addClass('ready-search');
                        $(this.$mobileSearch).addClass('active');
                    }
                } else {
                    $(this.$e).attr('data-search-toggle', 'closed');
                    $(this.$e).attr('aria-expanded', 'false');
                    $(this.$searchInput).attr('tabindex', '-1');
                    $(this.$searchInput).next('.uxf-search-bar-clear-icon').attr('tabindex', '-1');
                    searchBox.removeClass('uxf-header-search-shown');
                    inputBox.blur();
                }
            }
        },

        closeOnClickOutside: function (e) {
            if (!$(this.$e).find('.uxf-header .uxf-header-search').is(e.target) // if the target of the click isn't our search box.
                && $(this.$e).find('.uxf-header .uxf-header-search').has(e.target).length === 0 // ... nor a descendant of our search box.
                && !$(this.$e).find('.uxf-header .uxf-btn-search').is(e.target) // ... nor the mobile search button
                && $(this.$e).find('.uxf-header .uxf-btn-search').has(e.target).length === 0) // ... nor a descendant of our mobile button
            {
                $(this.$e).find('.uxf-header .uxf-btn-search').attr('data-search-toggle', 'closed');
                $(this.$e).find('.uxf-header .uxf-btn-search').attr('aria-expanded', 'false');
                $(this.$e).find('.uxf-header .uxf-header-search').removeClass('uxf-header-search-shown ready-search');
                $(this.$e).find('.uxf-header .uxf-search-bar').removeClass('active')
                $(this.$e).find('.uxf-header .uxf-search-bar').attr('tabindex', '-1');
                $(this.$e).find('.uxf-header .uxf-search-bar-clear-icon').attr('tabindex', '-1');
            }
        },

        closeOnFocusOutside: function () {
            if (!$(this.$e).find('.uxf-header .uxf-header-search').is(document.activeElement) // if the target of the click isn't our search box.
                && $(this.$e).find('.uxf-header .uxf-header-search').has(document.activeElement).length === 0 // ... nor a descendant of our search box.
                && !$(this.$e).find('.uxf-header .uxf-btn-search').is(document.activeElement) // ... nor the mobile search button
                && $(this.$e).find('.uxf-header .uxf-btn-search').has(document.activeElement).length === 0) // ... nor a descendant of our mobile button
            {
                $(this.$e).find('.uxf-header .uxf-btn-search').attr('data-search-toggle', 'closed');
                $(this.$e).find('.uxf-header .uxf-btn-search').attr('aria-expanded', 'false');
                $(this.$e).find('.uxf-header .uxf-header-search').removeClass('uxf-header-search-shown ready-search');
                $(this.$e).find('.uxf-header .uxf-search-bar').removeClass('active')
                $(this.$e).find('.uxf-header .uxf-search-bar').attr('tabindex', '-1');
                $(this.$e).find('.uxf-header .uxf-search-bar-clear-icon').attr('tabindex', '-1');
            }
        },

        currentSearchValue: function () {
            if ($(this.$searchInput).val().length > 0 && $(this.$pe).hasClass('uxf-header-search-shown')) {
                $(this.$pe).find('.uxf-search-bar').addClass('active');
                $(this.$mobileSearch).addClass('active');
                $(this.$pe).addClass('ready-search');
                return true;
            } else {
                $(this.$pe).find('.uxf-search-bar').removeClass('active');
                $(this.$mobileSearch).removeClass('active');
                $(this.$pe).removeClass('ready-search');
            }
        },

        clearSearch: function (e) {
            e.preventDefault();
            $(this.$searchInput).val('');
            $(this.$pe).find('.uxf-search-bar').removeClass('active');
            $(this.$mobileSearch).removeClass('active');
            $(this.$pe).removeClass('ready-search');
            $(this.$searchInput).focus();
        },
    }

    H.Header = function (a) {
        return new Header(H.elementOrId(a));
    }

    H.Register.Header = function (e) {
        H.registerEvents(Header.selector, 'click', Header, 'toggleSearch', e);
        H.registerEvents(document, 'click', Header, 'closeOnClickOutside', e);
        H.registerEvents(document, 'keyup', Header, 'closeOnFocusOutside', e);
        H.registerEvents('.uxf-header input[type=search]', 'keyup', Header, 'currentSearchValue', e);
        H.registerEvents('.uxf-search-bar-clear-icon', 'click', Header, 'clearSearch', e);
    }

    H.defaultRegister(H.Register.Header);

};

module.exports = Header;
