// Copyright (c) 2018 Deere & Company

// Imports all Bootstrap JS Plugins
import "bootstrap";

// Import Individual JS Plugins
// import 'bootstrap/js/dist/alert';
// import 'bootstrap/js/dist/button';
// import 'bootstrap/js/dist/carousel';
// import 'bootstrap/js/dist/collapse';
// import 'bootstrap/js/dist/dropdown';
// import 'bootstrap/js/dist/modal';
// import 'bootstrap/js/dist/tooltip';
// import 'bootstrap/js/dist/popover';
// import 'bootstrap/js/dist/scrollspy';
// import 'bootstrap/js/dist/tab';
// import 'bootstrap/js/dist/util';

// Import Menu Aim for Expanded Menu Hover Management
import "./jquery.menu-aim.js";

// Load the UXFrame Helper.
const $UXF = require("./helper");

// Load the Components and add them to UXFrame
const Components = require("./components/components");

Components.Header($UXF);
Components.Tab($UXF);
Components.FileUpload($UXF);
Components.Search($UXF);
Components.SelectMenu($UXF);

$UXF.log("UXFrame Components Loaded.");

// Init tooltips.
// Bootstrap 4 now positions tooltips relative to body so
// unique varieties of tooltips must be specified separately.
$(function() {
    $('[data-toggle="tooltip"]:not(.uxf-tooltip-danger)').tooltip();
    $('.uxf-tooltip-danger[data-toggle="tooltip"]').tooltip({
        template:
            '<div class="tooltip uxf-tooltip-danger" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>'
    });
});

// Init popovers.
$(function() {
    $('[data-toggle="popover"]').popover({
        template:
            '<div class="popover" role="tooltip"><div class="arrow"></div><h6 class="popover-header"></h6><div class="popover-body"></div></div>'
    });
});

// Add Backdrop when Nav is Open
$(function() {
    $(".navbar-toggler").click(function() {
        $("body").addClass("uxf-backdrop");
        $("html").addClass("uxf-backdrop");
    });

    $(".navbar-back").click(function() {
        $("body").removeClass("uxf-backdrop");
        $("html").removeClass("uxf-backdrop");
    });

    $(document).on("click touchend", function(e) {
        if (
            !$(e.target).is(".navbar-collapse.show") &&
            $(".navbar-collapse").hasClass("show") &&
            $(".navbar-collapse.show").has(e.target).length === 0
        ) {
            $(".navbar-collapse.show .navbar-back").click();
        }
    });
});

/* // Fix tabindex of disabled DataTables buttons for a11y
$(function() {
    $(".dataTables_paginate .page-item.disabled > a").attr("tabindex", -1);

    $(".dataTables_paginate .page-item").click(function() {
        $(".dataTables_paginate .page-item.disabled > a").attr("tabindex", -1);
    });
}); */

// Set all inline SVGs to not be focusable due to how IE11 and older Edge browsers handle the tabindex of SVGs.
$(function() {
    $("svg").attr("focusable", "false");
});

// Init Menu Aim
$(function() {
    var $menu = $(".dropdown-menu.uxf-expanded-menu");

    var $expandedMenuItem = $(
        ".uxf-expanded-menu > .uxf-parent-menu-item > .uxf-submenu-item"
    );

    if ($(window).width() >= 768) {
        $menu.menuAim({
            activate: activateSubmenu, // fired on row activation
            deactivate: deactivateSubmenu, // fired on row deactivation
            rowSelector: "> .uxf-parent-menu-item",
            tolerance: 90
        });

        updateExpandedMenuWidth($menu, $menu.outerWidth());
    }

    function activateSubmenu(row) {
        var $row = $(row),
            submenuId = $row.data("submenuId"),
            $submenu = $("#" + submenuId),
            height = $menu.outerHeight(),
            width = $menu.outerWidth();

        // Show the submenu
        $submenu.css({
            display: "flex",
            top: -1,
            left: width - 2, // main should overlay submenu
            height: height
        });

        updateExpandedMenuWidth($menu, width);

        $row.find("a.dropdown-item").addClass("active");
        $row.find(".uxf-submenu-item").addClass("open");
    }
    function deactivateSubmenu(row) {
        var $row = $(row),
            submenuId = $row.data("submenuId"),
            $submenu = $("#" + submenuId);
        // Hide the submenu and remove the row's highlighted look
        $submenu.css("display", "none");
        $row.find("a.dropdown-item").removeClass("active");
        $row.find(".uxf-submenu-item.open").removeClass("open");
    }
    // Bootstrap's dropdown menus immediately close on document click.
    // Don't let this event close the menu if a submenu is being clicked.
    // This event propagation control doesn't belong in the menu-aim plugin
    // itself because the plugin is agnostic to bootstrap.
    $(".dropdown-menu .uxf-parent-menu-item a").click(function(e) {
        e.stopPropagation();
    });

    var resizing = false;

    function updateExpandedMenuWidth(parentMenu, width) {
        if ($(parentMenu).parent().length) {
            var $expandedMenuWidth =
                $(".uxf-header + .uxf-top-nav").width() -
                $(parentMenu)
                    .parent()
                    .position().left -
                width -
                30;

            $expandedMenuItem.css({
                width: $expandedMenuWidth
            });
        }

        resizing = false;
    }

    $(window).on("resize", function() {
        if (!resizing && $(window).width() >= 768) {
            window.requestAnimationFrame(() => {
                updateExpandedMenuWidth($menu, $menu.outerWidth());
            });
            resizing = true;
        }
    });

    $(".uxf-parent-menu-item .uxf-back-link").click(function() {
        $(this)
            .parent()
            .removeClass("open");
    });

    $(".uxf-expanded-menu .uxf-parent-menu-item")
        .children("a")
        .on("keypress click", function(event) {
            if (event.type === "click") {
                event.preventDefault();
                var selected = $(this);
                $(".dropdown-item.active-tab").removeClass("active active-tab");
                if ($(window).width() >= 768) {
                    $(".uxf-submenu-item.open").removeClass("open");
                    selected.addClass("active active-tab");
                }
                selected.next(".uxf-submenu-item").addClass("open");
            }
        });
});

// Log that loading is finished
$UXF.log("UXFrame Core JS Loaded");

module.exports = $UXF;
