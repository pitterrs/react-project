const webpack = require('webpack')
const path = require('path')
const pkg = require('./package.json')
const HtmlWebpackPlugin = require('html-webpack-plugin')
const CopyWebpackPlugin = require('copy-webpack-plugin')
const MiniCssExtractPlugin = require('mini-css-extract-plugin')
const FixStyleOnlyEntriesPlugin = require('webpack-fix-style-only-entries')
// const WebpackAutoInject = require('webpack-auto-inject-version');
const OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin')
const iconData = require('@deere/ux.brand-foundations/icons/iconList.json')
// const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin; // TO ANALYZE DEV BUNDLE: Uncomment this line.

module.exports = {
  entry: {
    ['uxframe-black']: './src/styles/uxframe-black.scss',
    ['uxframe']: [
      './src/styles/uxframe.scss',
      './src/js/uxframe.js'
    ],
    ['uxframe-plus']: ['./src/js/uxframe.with-lib.js'],
    // Needed to export $UXF from this file to not break the object when $UXF library is used.
    'ux-deere-site': [
      './src/styles/ux-deere-site.scss',
      './src/js/ux-deere-site.js'
    ]
  },
  module: {
    rules: [
      { parser: { amd: false } },
      {
        enforce: 'pre',
        test: /\.js$/,
        exclude: /node_modules/,
        loader: 'eslint-loader'
      },
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader'
        }
      },
      {
        test: /\.(scss|css)$/,
        use: [
          MiniCssExtractPlugin.loader,
          {
            loader: 'css-loader',
            options: {
              minimize: {
                safe: true
              },
              url: false
            }
          },
          {
            loader: 'postcss-loader',
            options: {
              plugins: () => [
                require('autoprefixer')({
                  browsers: ['> 1%', 'last 2 versions']
                })
              ]
            }
          },
          {
            loader: 'sass-loader',
            options: {}
          }
        ]
      },
      {
        test: /\.(png|jpg|jpeg|gif|woff|woff2|eot|ttf)$/,
        use: 'url-loader?limit=100000'
      },
      {
        test: /\.svg$/,
        loader: 'svg-inline-loader'
      },
      {
        test: require.resolve('jquery'),
        use: [
          {
            loader: 'expose-loader',
            options: 'jQuery'
          },
          {
            loader: 'expose-loader',
            options: '$'
          },
          {
            loader: 'expose-loader',
            options: 'jquery'
          }
        ]
      }
    ]
  },
  plugins: [
    // TO ANALYZE DEV BUNDLE: Uncomment the line below.
    // new BundleAnalyzerPlugin(),
    new FixStyleOnlyEntriesPlugin(),
    new MiniCssExtractPlugin({
      filename: 'css/[name].min.css'
    }),
    new OptimizeCssAssetsPlugin({
      assetNameRegExp: /\.css$/,
      cssProcessor: require('cssnano'),
      cssProcessorOptions: {
        discardComments: true,
        discardUnused: true,
        mergeLonghand: false,
        zindex: false
      }
    }),
    /* new HtmlWebpackPlugin({
            template: './src/index.html'
        }),
        new HtmlWebpackPlugin({
            template: './src/uxf-tldr.html',
            filename: './uxf-tldr.html'
        }),
        */
    new HtmlWebpackPlugin({
      template: './src/components.html',
      filename: './components.html'
    }),
    new HtmlWebpackPlugin({
      template: './src/docs/foundations/icons.html',
      filename: './docs/foundations/icons.html',
      iconData: iconData
    }),
    new webpack.ProvidePlugin({
      Popper: ['popper.js', 'default'],
      Alert: 'exports-loader?Alert!bootstrap/js/dist/alert',
      Button: 'exports-loader?Button!bootstrap/js/dist/button',
      Carousel: 'exports-loader?Carousel!bootstrap/js/dist/carousel',
      Collapse: 'exports-loader?Collapse!bootstrap/js/dist/collapse',
      Dropdown: 'exports-loader?Dropdown!bootstrap/js/dist/dropdown',
      Modal: 'exports-loader?Modal!bootstrap/js/dist/modal',
      Popover: 'exports-loader?Popover!bootstrap/js/dist/popover',
      Scrollspy: 'exports-loader?Scrollspy!bootstrap/js/dist/scrollspy',
      Tab: 'exports-loader?Tab!bootstrap/js/dist/tab',
      Tooltip: 'exports-loader?Tooltip!bootstrap/js/dist/tooltip',
      Util: 'exports-loader?Util!bootstrap/js/dist/util'
    }),
    new CopyWebpackPlugin([
      {
        from: './src/img/uxf.png',
        to: './img/uxf-' + pkg.version + '.png',
        toType: 'file'
      },
      {
        from: './src/lib',
        to: './lib'
      },
      {
        from: './src/deprecated/uxframe-2019.3.0.min.css',
        to: './css/'
      },
      {
        from: './src/deprecated/uxframe-black-2019.3.0.min.css',
        to: './css/'
      },
      {
        from: './src/deprecated/uxframe-2019.3.1.min.css',
        to: './css/'
      },
      {
        from: './src/deprecated/uxframe-black-2019.3.1.min.css',
        to: './css/'
      },
      {
        from: './../../node_modules/@deere/ux.brand-foundations/typography',
        to: './typography'
      },
      {
        from: './../../node_modules/@deere/ux.brand-foundations/icons',
        to: './icons'
      },
      {
        from: './../../node_modules/@deere/ux.brand-foundations/logos',
        to: './img'
      },
      {
        from:
          './../../node_modules/@deere/ux.brand-foundations/favicons/green-favicon',
        to: './img/green-favicon'
      },
      {
        from:
          './../../node_modules/@deere/ux.brand-foundations/favicons/black-favicon',
        to: './img/black-favicon'
      }
    ])
  ],
  stats: 'minimal',
  output: {
    library: '$UXF',
    path: path.join(__dirname, './dist'),
    filename: 'js/[name].min.js'
  },
  resolve: {
    extensions: ['.js']
  },
  devServer: {
    port: 8080,
    noInfo: true,
    stats: 'minimal',
    compress: true
  }
}
