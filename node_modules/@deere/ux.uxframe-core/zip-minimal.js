let fs = require('fs')
let archiver = require('archiver')
let uxframeCorePackageVersion = require('./package.json').version

let uxframeCoreMinimal =
  __dirname + '/downloads/uxframe-minimal-' + uxframeCorePackageVersion + '.zip'
let output = fs.createWriteStream(uxframeCoreMinimal)
let archive = archiver('zip', {
  zlib: { level: 9 } // Sets the compression level.
})

output.on('close', function () {
  console.log(archive.pointer() + ' total bytes')
  console.log(
    'UXFrame Core ' +
      uxframeCorePackageVersion +
      ' has been successfully zipped.'
  )
})

// This event is fired when the data source is drained no matter what was the data source.
// It is not part of this library but rather from the NodeJS Stream API.
// @see: https://nodejs.org/api/stream.html#stream_event_end
output.on('end', function () {
  console.log('Data has been drained')
})

// good practice to catch warnings (ie stat failures and other non-blocking errors)
archive.on('warning', function (err) {
  if (err.code === 'ENOENT') {
    // log warning
  } else {
    // throw error
    throw err
  }
})

// good practice to catch this error explicitly
archive.on('error', function (err) {
  throw err
})

// pipe archive data to the file
archive.pipe(output)

// We have to add these individually right now so the ux-site styling
// and scripts are not included with the zipped file.
let uxframeCSS = 'uxframe-' + uxframeCorePackageVersion + '.min.css'
let uxframeCSSBlack = 'uxframe-black-' + uxframeCorePackageVersion + '.min.css'
let uxframeJS = 'uxframe-' + uxframeCorePackageVersion + '.min.js'
let uxframeJSPlus = 'uxframe-plus-' + uxframeCorePackageVersion + '.min.js'

archive.file('dist/css/' + uxframeCSS, { name: 'css/' + uxframeCSS })
archive.file('dist/css/' + uxframeCSSBlack, { name: 'css/' + uxframeCSSBlack })
archive.file('dist/js/' + uxframeJS, { name: 'js/' + uxframeJS })
archive.file('dist/js/' + uxframeJSPlus, { name: 'js/' + uxframeJSPlus })
archive.directory('dist/icons/', 'icons')
archive.directory('dist/img/', 'img')
archive.directory('dist/typography/', 'typography')

archive.finalize()
