"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccordionItem = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Button = _interopRequireDefault(require("react-bootstrap/Button"));

var _Accordion = _interopRequireDefault(require("react-bootstrap/Accordion"));

var _AccordionContext = _interopRequireDefault(require("react-bootstrap/AccordionContext"));

var _Card = _interopRequireDefault(require("react-bootstrap/Card"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ChevronRightIcon = function ChevronRightIcon(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

ChevronRightIcon.defaultProps = _defineProperty({
  focusable: "false",
  'aria-hidden': "true",
  fill: "#666",
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  viewBox: "0 0 24 24"
}, "focusable", 'false');

var AccordionItem = function AccordionItem(_ref) {
  var children = _ref.children,
      title = _ref.title,
      summary = _ref.summary,
      id = _ref.id,
      props = _objectWithoutProperties(_ref, ["children", "title", "summary", "id"]);

  var contextEventKey = (0, _react.useContext)(_AccordionContext["default"]);
  return /*#__PURE__*/_react["default"].createElement(_Card["default"], props, /*#__PURE__*/_react["default"].createElement(_Card["default"].Header, null, /*#__PURE__*/_react["default"].createElement("h5", {
    className: "uxf-accordion-item"
  }, /*#__PURE__*/_react["default"].createElement(_Accordion["default"].Toggle, {
    as: _Button["default"],
    variant: "link",
    "aria-expanded": contextEventKey === id,
    "aria-controls": id,
    eventKey: id
  }, /*#__PURE__*/_react["default"].createElement(ChevronRightIcon, {
    className: "uxf-accordion-icon"
  }), /*#__PURE__*/_react["default"].createElement("span", {
    className: "uxf-accordion-title"
  }, title), /*#__PURE__*/_react["default"].createElement("span", {
    className: "uxf-accordion-summary"
  }, summary)))), /*#__PURE__*/_react["default"].createElement(_Accordion["default"].Collapse, {
    id: id,
    eventKey: id
  }, /*#__PURE__*/_react["default"].createElement(_Card["default"].Body, null, children)));
};

exports.AccordionItem = AccordionItem;
AccordionItem.propTypes = {
  /**
   * Title of item within accordion
   */
  title: _propTypes["default"].string.isRequired,

  /**
   * Id of the accordion item's content. Corresponds to the collapse component that gets triggered when this has been clicked.
   * This is also used to improve accessibility by connecting content to toggle button.
   */
  id: _propTypes["default"].string.isRequired,

  /**
   * Additional text/content added to right of accordion title
   */
  summary: _propTypes["default"].node
};