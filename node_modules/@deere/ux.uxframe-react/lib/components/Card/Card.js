"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Card = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Card = _interopRequireDefault(require("react-bootstrap/Card"));

var _createWithBsPrefix = _interopRequireDefault(require("../utils/createWithBsPrefix"));

var _divWithClassName = _interopRequireDefault(require("../utils/divWithClassName"));

var _CardImg = _interopRequireDefault(require("react-bootstrap/CardImg"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var DivStyledAsH5 = (0, _divWithClassName["default"])("h5");
var DivStyledAsH6 = (0, _divWithClassName["default"])("h6");
var CardBody = (0, _createWithBsPrefix["default"])("card-body");

var Card = function Card(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ["children"]);

  return /*#__PURE__*/_react["default"].createElement(_Card["default"], props, children);
};

exports.Card = Card;
Card.propTypes = {
  /**
   * Change the underlying component CSS base class name and modifier class names prefix
   *
   * default 'card'
   */
  bsPrefix: _propTypes["default"].string,

  /**
   * Sets card background
   * `"primary"` `"secondary"` `"success"` `"danger"` `"warning"` `"info"` `"dark"`
   */
  bg: _propTypes["default"].string,

  /**
   * Sets card text color
   *
   * `"primary"` `"secondary"` `"success"` `"danger"` `"warning"` `"info"` `"white"` `"light"` `"dark"`
   */
  text: _propTypes["default"].string,

  /**
   * Sets card border color
   *
   * `"primary"` `"secondary"` `"success"` `"danger"` `"warning"` `"info"` `"dark"`
   */
  border: _propTypes["default"].string,

  /**
   * When this prop is set, it creates a Card with a Card.Body inside
   * passing the children directly to it
   */
  body: _propTypes["default"].bool,

  /** Set a custom element for this component */
  as: _propTypes["default"].elementType
};
Card.Img = _CardImg["default"];
Card.Title = (0, _createWithBsPrefix["default"])("card-title", {
  Component: DivStyledAsH5
});
Card.Subtitle = (0, _createWithBsPrefix["default"])("card-subtitle", {
  Component: DivStyledAsH6
});
Card.Body = CardBody;
Card.Link = (0, _createWithBsPrefix["default"])("card-link", {
  Component: "a"
});
Card.Text = (0, _createWithBsPrefix["default"])("card-text", {
  Component: "p"
});
Card.Header = (0, _createWithBsPrefix["default"])("card-header");
Card.Footer = (0, _createWithBsPrefix["default"])("card-footer");
Card.ImgOverlay = (0, _createWithBsPrefix["default"])("card-img-overlay");