"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropdownButton = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _DropdownButton = _interopRequireDefault(require("react-bootstrap/DropdownButton"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var DropdownButton = function DropdownButton(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ["children"]);

  return /*#__PURE__*/_react["default"].createElement(_DropdownButton["default"], props, children);
};

exports.DropdownButton = DropdownButton;
DropdownButton.propTypes = {
  /**
   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.
   * @type {string|number}
   */
  id: _propTypes["default"].any,

  /** An `href` passed to the Toggle component */
  href: _propTypes["default"].string,

  /** An `onClick` handler passed to the Toggle component */
  onClick: _propTypes["default"].func,

  /** The content of the non-toggle Button.  */
  title: _propTypes["default"].node,

  /** Disables both Buttons  */
  disabled: _propTypes["default"].bool,

  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */
  menuRole: _propTypes["default"].string,

  /**
   *  Which event when fired outside the component will cause it to be closed.     *
   */
  rootCloseEvent: _propTypes["default"].string,

  /** @ignore */
  bsPrefix: _propTypes["default"].string,

  /** @ignore */
  variant: _propTypes["default"].string,

  /** @ignore */
  size: _propTypes["default"].string
};