"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Header = exports.HeaderContext = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Form = _interopRequireDefault(require("react-bootstrap/Form"));

var _Button = _interopRequireDefault(require("react-bootstrap/Button"));

var _Navbar = _interopRequireDefault(require("react-bootstrap/Navbar"));

var _Nav = _interopRequireDefault(require("react-bootstrap/Nav"));

var _Search = require("../Search");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var SearchIcon = function SearchIcon(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SearchIcon.defaultProps = _defineProperty({
  focusable: "false",
  'aria-hidden': "true",
  fill: "#666",
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  viewBox: "0 0 24 24"
}, "focusable", 'false');

var MenuIcon = function MenuIcon(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
  }));
};

MenuIcon.defaultProps = _defineProperty({
  focusable: "false",
  'aria-hidden': "true",
  fill: "#666",
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  viewBox: "0 0 24 24"
}, "focusable", 'false');

var CancelIcon = function CancelIcon(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

CancelIcon.defaultProps = _defineProperty({
  focusable: "false",
  'aria-hidden': "true",
  fill: "#666",
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  viewBox: "0 0 24 24"
}, "focusable", 'false');

var HeaderContext = /*#__PURE__*/_react["default"].createContext();

exports.HeaderContext = HeaderContext;

var NOOP = function NOOP() {
  return undefined;
};

var Header = /*#__PURE__*/function (_React$Component) {
  _inherits(Header, _React$Component);

  var _super = _createSuper(Header);

  function Header(props) {
    var _this;

    _classCallCheck(this, Header);

    _this = _super.call(this, props);
    _this.state = {
      openSearch: false,
      openMenu: false,
      inputValue: "",
      isMobile: false
    };
    _this.inputRef = /*#__PURE__*/_react["default"].createRef();
    _this.handleClearBtnClick = _this.handleClearBtnClick.bind(_assertThisInitialized(_this));
    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));
    _this.handleSearchBtnClick = _this.handleSearchBtnClick.bind(_assertThisInitialized(_this));
    _this.setWrapperRef = _this.setWrapperRef.bind(_assertThisInitialized(_this));
    _this.setNavWrapperRef = _this.setNavWrapperRef.bind(_assertThisInitialized(_this));
    _this.handleClickOutside = _this.handleClickOutside.bind(_assertThisInitialized(_this));
    _this.handleMenuClick = _this.handleMenuClick.bind(_assertThisInitialized(_this));
    _this.getWindowWidth = _this.getWindowWidth.bind(_assertThisInitialized(_this));
    _this.onClickLink = _this.onClickLink.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Header, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      document.addEventListener("mousedown", this.handleClickOutside);
      document.addEventListener("keyup", this.handleClickOutside);
      this.getWindowWidth();
      window.addEventListener("resize", this.getWindowWidth);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      document.removeEventListener("mousedown", this.handleClickOutside);
      document.removeEventListener("keyup", this.handleClickOutside);
      window.removeEventListener("resize", this.getWindowWidth);
    }
  }, {
    key: "getWindowWidth",
    value: function getWindowWidth() {
      if (window.innerWidth < this.props.menuBreakpoint) {
        this.setState({
          isMobile: true
        });
      } else {
        this.setState({
          isMobile: false
        });
        this.setState({
          openMenu: false
        });
        document.body.classList.remove("uxf-backdrop");
        document.documentElement.classList.remove("uxf-backdrop");
      }
    }
  }, {
    key: "handleClearBtnClick",
    value: function handleClearBtnClick() {
      this.setState({
        inputValue: ""
      });
      this.inputRef.current.focus();
    }
  }, {
    key: "handleInputChange",
    value: function handleInputChange(event) {
      this.setState({
        inputValue: event.target.value
      });
    }
  }, {
    key: "handleSearchBtnClick",
    value: function handleSearchBtnClick(event) {
      var currentState = this.state.openSearch;
      !currentState && event.preventDefault();
      !currentState && this.inputRef.current.focus();
      this.setState({
        openSearch: !currentState
      });

      if (this.inputRef.current.value === "") {
        event.preventDefault();
      }
    }
  }, {
    key: "handleMenuClick",
    value: function handleMenuClick() {
      var currentState = this.state.openMenu;
      this.setState({
        openMenu: !currentState
      });

      if (!currentState && this.state.isMobile) {
        document.body.classList.add("uxf-backdrop");
        document.documentElement.classList.add("uxf-backdrop");
      } else {
        document.body.classList.remove("uxf-backdrop");
        document.documentElement.classList.remove("uxf-backdrop");
      }
    }
    /**
     * Set the wrapper ref
     */

  }, {
    key: "setWrapperRef",
    value: function setWrapperRef(node) {
      this.wrapperRef = node;
    }
  }, {
    key: "setNavWrapperRef",
    value: function setNavWrapperRef(node) {
      this.navWrapperRef = node;
    }
    /**
     * Alert if clicked on outside of element
     */

  }, {
    key: "handleClickOutside",
    value: function handleClickOutside(event) {
      if (this.wrapperRef && !this.wrapperRef.contains(event.target) && !this.mobileSearchBtn.contains(event.target)) {
        this.setState({
          openSearch: false
        });
      }

      if (this.navWrapperRef && !this.navWrapperRef.contains(event.target)) {
        if (this.state.openMenu) {
          this.handleMenuClick();
        }
      }
    }
    /**
     * Closes mobile menu if using React Router or external library
     */

  }, {
    key: "onClickLink",
    value: function onClickLink() {
      if (this.state.isMobile) {
        this.handleMenuClick();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          variant = _this$props.variant,
          className = _this$props.className,
          pageHeading = _this$props.pageHeading,
          pageHeadingLink = _this$props.pageHeadingLink,
          clearBtnProps = _this$props.clearBtnProps,
          submitBtnProps = _this$props.submitBtnProps,
          inputProps = _this$props.inputProps,
          navProps = _this$props.navProps,
          navbarProps = _this$props.navbarProps,
          formProps = _this$props.formProps,
          headerTitleComponent = _this$props.headerTitleComponent,
          logoLink = _this$props.logoLink,
          logoAriaLabel = _this$props.logoAriaLabel,
          closeIconAriaLabel = _this$props.closeIconAriaLabel,
          children = _this$props.children,
          search = _this$props.search,
          mobileMenu = _this$props.mobileMenu,
          navbar = _this$props.navbar,
          navbarCustom = _this$props.navbarCustom,
          skipLink = _this$props.skipLink,
          skipLinkText = _this$props.skipLinkText,
          menuBreakpoint = _this$props.menuBreakpoint,
          _this$props$logoLinkO = _this$props.logoLinkOnClick,
          logoLinkOnClick = _this$props$logoLinkO === void 0 ? NOOP : _this$props$logoLinkO,
          _this$props$pageHeadi = _this$props.pageHeadingLinkOnClick,
          pageHeadingLinkOnClick = _this$props$pageHeadi === void 0 ? NOOP : _this$props$pageHeadi,
          props = _objectWithoutProperties(_this$props, ["variant", "className", "pageHeading", "pageHeadingLink", "clearBtnProps", "submitBtnProps", "inputProps", "navProps", "navbarProps", "formProps", "headerTitleComponent", "logoLink", "logoAriaLabel", "closeIconAriaLabel", "children", "search", "mobileMenu", "navbar", "navbarCustom", "skipLink", "skipLinkText", "menuBreakpoint", "logoLinkOnClick", "pageHeadingLinkOnClick"]);

      var classes = (0, _classnames["default"])("uxf-header", "navbar", !headerTitleComponent && "uxf-header-no-user", !search && "uxf-header-no-search", !mobileMenu && "uxf-header-no-menu", navbarCustom && !this.state.isMobile && "uxf-header-navbar-expanded", navbarCustom && "uxf-header-navbar", navbarCustom && menuBreakpoint >= 1200 && "uxf-header-navbar-xl", variant, className);
      var formClasses = (0, _classnames["default"])("uxf-header-search", "navbar-form", this.state.openSearch && "uxf-header-search-shown", formProps.className);
      var logoClasses = (0, _classnames["default"])("uxf-logo", variant === "uxf-header-jdf" && "uxf-logo-jdf", variant === "uxf-header-jdf-inline" && "uxf-logo-jdf-inline");
      var inputClasses = (0, _classnames["default"])(this.state.inputValue && this.state.openSearch && "active", inputProps.className);
      var navbarClasses = (0, _classnames["default"])("uxf-top-nav", navbarCustom && !this.state.isMobile && "uxf-navbar-expanded", navbarCustom && this.state.isMobile && "uxf-navbar-mobile-active", navbarProps.className);
      return /*#__PURE__*/_react["default"].createElement("div", {
        ref: this.setNavWrapperRef
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "uxf-skip-link"
      }, /*#__PURE__*/_react["default"].createElement("a", {
        className: "sr-only sr-only-focusable",
        href: skipLink
      }, skipLinkText)), /*#__PURE__*/_react["default"].createElement("header", _extends({
        as: "header",
        className: classes
      }, props), variant !== "uxf-header-unbranded" && /*#__PURE__*/_react["default"].createElement("a", {
        "aria-label": logoAriaLabel,
        onClick: logoLinkOnClick,
        href: logoLink
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: logoClasses
      })), /*#__PURE__*/_react["default"].createElement("div", {
        className: "uxf-header-title"
      }, /*#__PURE__*/_react["default"].createElement("span", {
        className: "h1 uxf-header-title-heading"
      }, /*#__PURE__*/_react["default"].createElement("a", {
        className: "uxf-header-title-link",
        onClick: pageHeadingLinkOnClick,
        href: pageHeadingLink,
        "aria-label": variant === "uxf-header-unbranded" ? logoAriaLabel : undefined
      }, pageHeading)), headerTitleComponent), search && /*#__PURE__*/_react["default"].createElement(_Button["default"], {
        variant: "uxf-mobile-search",
        className: "uxf-btn-search",
        "aria-controls": "uxf-search-input",
        "aria-expanded": this.state.openSearch,
        onClick: this.handleSearchBtnClick,
        ref: function ref(node) {
          _this2.mobileSearchBtn = node;
        }
      }, /*#__PURE__*/_react["default"].createElement("span", {
        className: "sr-only"
      }, "Toggle Search"), /*#__PURE__*/_react["default"].createElement(SearchIcon, {
        className: "uxf-icon-search"
      })), mobileMenu && navbar && /*#__PURE__*/_react["default"].createElement(_Navbar["default"].Toggle, {
        "aria-controls": "uxf-header-navbar",
        "aria-expanded": this.state.openMenu,
        onClick: this.handleMenuClick
      }, /*#__PURE__*/_react["default"].createElement(MenuIcon, {
        className: "menu-icon"
      })), search && /*#__PURE__*/_react["default"].createElement(_Form["default"], _extends({
        role: "search",
        className: formClasses,
        ref: this.setWrapperRef
      }, formProps), /*#__PURE__*/_react["default"].createElement(_Search.SearchInput, _extends({
        id: "uxf-search-input",
        tabIndex: this.state.openSearch ? 0 : -1,
        onChange: this.handleInputChange,
        value: this.state.inputValue,
        ariaLabel: inputProps.ariaLabel,
        innerRef: this.inputRef,
        className: inputClasses,
        placeholder: inputProps.placeholder
      }, inputProps)), /*#__PURE__*/_react["default"].createElement(_Search.SearchClearButton, _extends({
        onClick: this.handleClearBtnClick,
        ariaLabel: clearBtnProps.ariaLabel,
        className: clearBtnProps.className
      }, clearBtnProps)), /*#__PURE__*/_react["default"].createElement(_Search.SearchSubmitButton, _extends({
        ariaLabel: submitBtnProps.ariaLabel,
        className: submitBtnProps.className,
        onClick: this.handleSearchBtnClick,
        "aria-controls": "uxf-search-input",
        "aria-expanded": this.state.openSearch
      }, submitBtnProps)), /*#__PURE__*/_react["default"].createElement(_Button["default"], {
        type: "submit",
        variant: "uxf-mobile-search"
      }, "Go"))), navbar && /*#__PURE__*/_react["default"].createElement(_Navbar["default"], _extends({
        variant: "uxf",
        expand: "md",
        className: navbarClasses
      }, navbarProps), /*#__PURE__*/_react["default"].createElement(_Navbar["default"].Collapse, {
        "in": this.state.openMenu,
        id: "uxf-header-navbar"
      }, /*#__PURE__*/_react["default"].createElement(_Nav["default"], navProps, /*#__PURE__*/_react["default"].createElement(_Nav["default"].Item, {
        className: "uxf-nav-back"
      }, /*#__PURE__*/_react["default"].createElement(_Button["default"], {
        variant: "link",
        className: "navbar-back",
        onClick: this.handleMenuClick,
        "aria-label": closeIconAriaLabel,
        "aria-controls": "uxf-header-navbar",
        "aria-expanded": this.state.openMenu
      }, /*#__PURE__*/_react["default"].createElement(CancelIcon, null))), /*#__PURE__*/_react["default"].createElement(HeaderContext.Provider, {
        value: {
          onClickLink: this.onClickLink
        }
      }, navbarCustom && this.state.isMobile && headerTitleComponent && /*#__PURE__*/_react["default"].createElement("div", {
        className: "uxf-header-dropdown-mobile nav-item"
      }, headerTitleComponent), children))), /*#__PURE__*/_react["default"].createElement("span", {
        className: "h1 uxf-nav-title"
      }, /*#__PURE__*/_react["default"].createElement("a", {
        href: pageHeadingLink
      }, pageHeading))));
    }
  }]);

  return Header;
}(_react["default"].Component);

exports.Header = Header;
Header.propTypes = {
  /**
   * Variations of Header
   * `"uxf-header-unbranded"` `"uxf-header-jdf"` `"uxf-header-jdf-inline"`
   */
  variant: _propTypes["default"].string,

  /**
   * Additional props passed to the clear search button
   */
  clearBtnProps: _propTypes["default"].object,

  /**
   * Additional props passed to the submit search button
   */
  submitBtnProps: _propTypes["default"].object,

  /**
   * Additional props passed to the search input
   */
  inputProps: _propTypes["default"].object,

  /**
   * Additional props passed to the nav
   */
  navProps: _propTypes["default"].object,

  /**
   * Additional props passed to the navbar
   */
  navbarProps: _propTypes["default"].object,

  /**
   * Additional props passed to the form
   */
  formProps: _propTypes["default"].object,

  /**
   * H1 heading of page (usually name of application)
   */
  pageHeading: _propTypes["default"].string,

  /**
   * Link associated with heading (usually points to app home page)
   */
  pageHeadingLink: _propTypes["default"].string.isRequired,

  /**
   * An onClick handler that is fired when the page heading link is clicked.
   */
  pageHeadingLinkOnClick: _propTypes["default"].func,

  /**
   * Accepts a React component for adding a subheader or dropdown beneath heading
   */
  headerTitleComponent: _propTypes["default"].element,

  /**
   * Includes a search in header
   */
  search: _propTypes["default"].bool,

  /**
   * Includes mobileMenu in header
   */
  mobileMenu: _propTypes["default"].bool,

  /**
   * Breakpoint for mobile menu.
   * Default in UXFrame CSS is 768px.
   * You must set navbarCustom to true for this prop to update the CSS.
   */
  menuBreakpoint: _propTypes["default"].number,

  /**
   * Link associated with logo (usually points to home page)
   */
  logoLink: _propTypes["default"].string.isRequired,

  /**
   * An onClick handler that is fired when the logo link is clicked.
   */
  logoLinkOnClick: _propTypes["default"].func,

  /**
   * Aria-label added to logo for screen readers. This should be something like 'home page'
   * and most likely will not be the company name. Users with assistive technologies know which company's
   * site they are on, so putting the company name here is redundant.
   */
  logoAriaLabel: _propTypes["default"].string,

  /**
   * Aria-label for close icon since icon has no text associated with it.
   */
  closeIconAriaLabel: _propTypes["default"].string,

  /**
   * Includes a navbar
   */
  navbar: _propTypes["default"].bool,

  /**
   * Uses custom header/navbar with ability to switch breakpoint
   * from the default 768px used. This property must be set to true
   * for the menuBreakpoint prop to work for values other than 768.
   */
  navbarCustom: _propTypes["default"].bool,

  /**
   * Should point to id of main content. This allows users using screen readers or their keyboard
   * to quickly get to the main content of the site and avoid nav elements.
   */
  skipLink: _propTypes["default"].string.isRequired,

  /**
   * Text associated with skip link
   */
  skipLinkText: _propTypes["default"].string
};
Header.defaultProps = {
  clearBtnProps: {},
  submitBtnProps: {},
  inputProps: {},
  navProps: {},
  navbarProps: {},
  formProps: {},
  pageHeading: "Supplier Follow-up Tool",
  search: true,
  mobileMenu: true,
  logoAriaLabel: "home page",
  closeIconAriaLabel: "Close navigation menu",
  navbar: true,
  navbarCustom: false,
  skipLinkText: "Skip to main content",
  menuBreakpoint: 768
};