"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HelperText = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var HelperText = function HelperText(_ref) {
  var helperText = _ref.helperText,
      helperTextId = _ref.helperTextId,
      className = _ref.className,
      children = _ref.children,
      smallProps = _ref.smallProps,
      props = _objectWithoutProperties(_ref, ["helperText", "helperTextId", "className", "children", "smallProps"]);

  var classes = (0, _classnames["default"])("form-text", "text-muted", smallProps.className);
  return /*#__PURE__*/_react["default"].createElement("div", _extends({}, props, {
    className: className
  }), children, /*#__PURE__*/_react["default"].createElement("small", _extends({
    id: helperTextId
  }, smallProps, {
    className: classes
  }), helperText));
};

exports.HelperText = HelperText;
HelperText.propTypes = {
  /**
   * Text associated with input.
   */
  helperText: _propTypes["default"].string.isRequired,

  /**
   * An html id attribute for the HelperText, necessary for assistive technologies, such as screen readers.
   */
  helperTextId: _propTypes["default"].string.isRequired,

  /**
   * Properties passed down to `<small>`
   */
  smallProps: _propTypes["default"].object
};
HelperText.defaultProps = {
  smallProps: {}
};