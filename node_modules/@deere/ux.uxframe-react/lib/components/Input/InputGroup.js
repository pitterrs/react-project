"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InputGroup = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _InputGroup = _interopRequireDefault(require("react-bootstrap/InputGroup"));

var _createWithBsPrefix = _interopRequireDefault(require("../utils/createWithBsPrefix"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var InputGroup = function InputGroup(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ["children"]);

  return /*#__PURE__*/_react["default"].createElement(_InputGroup["default"], props, children);
};

exports.InputGroup = InputGroup;
InputGroup.propTypes = {
  /** @default 'input-group' */
  bsPrefix: _propTypes["default"].string,

  /**
   * Control the size of buttons and form elements from the top-level .
   *
   * `"sm"` `"lg"`
   */
  size: _propTypes["default"].string,
  as: _propTypes["default"].elementType
};
var InputGroupAppend = (0, _createWithBsPrefix["default"])("input-group-append");
var InputGroupPrepend = (0, _createWithBsPrefix["default"])("input-group-prepend");
var InputGroupText = (0, _createWithBsPrefix["default"])("input-group-text", {
  Component: "span"
});

var InputGroupCheckbox = function InputGroupCheckbox(props) {
  return /*#__PURE__*/_react["default"].createElement(InputGroupText, null, /*#__PURE__*/_react["default"].createElement("input", _extends({
    type: "checkbox"
  }, props)));
};

var InputGroupRadio = function InputGroupRadio(props) {
  return /*#__PURE__*/_react["default"].createElement(InputGroupText, null, /*#__PURE__*/_react["default"].createElement("input", _extends({
    type: "radio"
  }, props)));
};

InputGroup.Text = InputGroupText;
InputGroup.Radio = InputGroupRadio;
InputGroup.Checkbox = InputGroupCheckbox;
InputGroup.Append = InputGroupAppend;
InputGroup.Prepend = InputGroupPrepend;