"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.List = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var List = function List(_ref) {
  var className = _ref.className,
      children = _ref.children,
      variant = _ref.variant,
      Component = _ref.as,
      props = _objectWithoutProperties(_ref, ["className", "children", "variant", "as"]);

  var classes = (0, _classnames["default"])(className, variant);
  return /*#__PURE__*/_react["default"].createElement(Component, _extends({}, props, {
    className: classes ? classes : null
  }), children);
};

exports.List = List;
List.propTypes = {
  /**
   * One or more list variant combinations
   *
   * `"uxf-ul"` `"list-unstyled"` `"uxf-line-separated"` `"uxf-dl"` `"uxf-dl-horizontal"` `"list-inline"`
   */
  variant: _propTypes["default"].string,

  /** Set a custom element for this component */
  as: _propTypes["default"].elementType
};
List.defaultProps = {
  variant: "",
  as: "ul"
};