"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListGroup = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ListGroup = _interopRequireDefault(require("react-bootstrap/ListGroup"));

var _ListGroupItem = _interopRequireDefault(require("react-bootstrap/ListGroupItem"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ListGroup = function ListGroup(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ["children"]);

  return /*#__PURE__*/_react["default"].createElement(_ListGroup["default"], props, children);
};

exports.ListGroup = ListGroup;
ListGroup.propTypes = {
  /**
   * @default 'list-group'
   */
  bsPrefix: _propTypes["default"].string,

  /**
   * Adds a variant to the list-group
   *
   * @type {('flush')}
   */
  variant: _propTypes["default"].oneOf(["flush", null]),

  /**
   * Changes the flow of the list group items from vertical to horizontal.
   * A value of `null` (the default) sets it to vertical for all breakpoints;
   * Just including the prop sets it for all breakpoints, while `{sm|md|lg|xl}`
   * makes the list group horizontal starting at that breakpointâ€™s `min-width`.
   * @type {(true|'sm'|'md'|'lg'|'xl')}
   */
  horizontal: _propTypes["default"].oneOf([true, "sm", "md", "lg", "xl", null]),

  /**
   * You can use a custom element type for this component.
   */
  as: _propTypes["default"].elementType
};
ListGroup.Item = _ListGroupItem["default"];