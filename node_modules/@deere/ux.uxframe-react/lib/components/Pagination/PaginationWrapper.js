"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PaginationWrapper = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Nav = require("../Nav/");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var PaginationWrapper = function PaginationWrapper(_ref) {
  var className = _ref.className,
      children = _ref.children,
      pageResults = _ref.pageResults,
      text = _ref.text,
      ariaLabel = _ref.ariaLabel;
  return pageResults ? /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])(className, "uxf-pagination")
  }, /*#__PURE__*/_react["default"].createElement("p", null, text), /*#__PURE__*/_react["default"].createElement(_Nav.Nav, {
    ariaLabel: ariaLabel
  }, children)) : /*#__PURE__*/_react["default"].createElement(_Nav.Nav, {
    ariaLabel: ariaLabel
  }, children);
};

exports.PaginationWrapper = PaginationWrapper;
PaginationWrapper.propTypes = {
  /**
   * Conditional display of page results
   */
  pageResults: _propTypes["default"].bool,

  /**
   * Text displayed before pagination. Usually indicates place in search results.
   */
  text: _propTypes["default"].string,

  /**
   * Aria-label of pagination navigation (Nav). This notifies individuals using
   * assistive technologies that they are on a pagination component.
   */
  ariaLabel: _propTypes["default"].string.isRequired
};