"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProgressBar = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ProgressBar = _interopRequireDefault(require("react-bootstrap/ProgressBar"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ProgressBar = function ProgressBar(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ["children"]);

  return /*#__PURE__*/_react["default"].createElement(_ProgressBar["default"], props, children);
};

exports.ProgressBar = ProgressBar;
ProgressBar.propTypes = {
  /**
   * Minimum value progress can begin from
   */
  min: _propTypes["default"].number,

  /**
   * Current value of progress
   */
  now: _propTypes["default"].number,

  /**
   * Maximum value progress can reach
   */
  max: _propTypes["default"].number,

  /**
   * Show label that represents visual percentage.
   * e.g. 60%
   */
  label: _propTypes["default"].node,

  /**
   * "Screen Reader Only"
   * Hides the label visually.
   */
  srOnly: _propTypes["default"].bool,

  /**
   * Uses a gradient to create a striped effect.
   */
  striped: _propTypes["default"].bool,

  /**
   * Animate's the stripes from right to left
   */
  animated: _propTypes["default"].bool,

  /**
   * @private
   * @default 'progress-bar'
   */
  bsPrefix: _propTypes["default"].string,

  /**
   * Sets the background class of the progress bar.
   *
   * `"success"` `"danger"` `"warning"` `"info"`
   */
  variant: _propTypes["default"].string,

  /**
   * @private
   */
  isChild: _propTypes["default"].bool
};